#!/bin/bash -eax

if [ "$0" != "bin/deploy" ]; then
  echo "Please run from the root of the looty project folder"
  exit 1
fi

# DEPLOY_DIR=../looty-deploy

# if [ ! -d "$DEPLOY_DIR" ]; then
#   echo "Need to have a ../looty-deploy directory relative to the looty checkout"
#   exit 2
# fi

bin/sbt clean
bin/sbt fullOptJS

rm -rf build
mkdir build
OUT="$(pwd)/build"
SRC=looty/target/web/public/main
cp "$SRC/looty.html" "$SRC/popup.html" "$SRC/looty-opt.js" "$SRC/manifest.json" "$OUT"
cp -r $SRC/images "$OUT"
cp -r $SRC/jslib "$OUT"
cp -r $SRC/less "$OUT"

cd $OUT
zip -r build.zip *

cd ../
rm -rf buildffsrc
mkdir buildffsrc
OUT="$(pwd)/buildffsrc"
SRC=looty
cp -r looty "$OUT"
cp -r project "$OUT"
cp -r bin "$OUT"
cp README.md "$OUT"

cd $OUT
zip -r buildffsrc.zip *
cp buildffsrc.zip ../build/



#zip "$OUT"

# google-chrome --pack-extension=build --pack-extension-key=$HOME/looty.pem
# VERSION=$(jq -r .version build/manifest.json)
# cp build.crx "$DEPLOY_DIR/looty-latest.crx"

#Deploy the demo page
# rm -rf "$DEPLOY_DIR/demo"
# mkdir -p "$DEPLOY_DIR/demo"
# cp -r build/* "$DEPLOY_DIR/demo"
# cp -r $SRC/data "$DEPLOY_DIR/demo"

#Push things up to github
# cd "$DEPLOY_DIR"
# git commit -a -m "Auto Commit of Latest Version $VERSION"
# git push origin HEAD
